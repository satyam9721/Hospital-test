Imp notes from this projects

frontend and backend api instance name and react state name should be same.

lastName (react) !=lastname (api)  (gives error in sending messages)
firstname  ==firstname (no gives error)


converting backend compatiable variable to fronted:
Here doctor_lastname,doctor_firstname are defined in backend.
Here doctorFirstname,doctorLastname are defined in fronted.


doctor_firstname : doctorFirstname,
doctor_lastname: doctorLastname,


const handleAddNewAdmin = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post(
        "http://localhost:4000/api/v1/user/admin/addnew",
        {
          firstname,
          lastname,
          email,
          phone,
          password,
          dob,
          nic,
          gender,
        },
        {
          withCredentials: true,
          headers: { "Content-Type": "application/json" },
        }
      );
	  
above code also replace by below code aswell:-


  const handleAddNewDoctor = async (e) => {
    e.preventDefault();
    try {
      const formData = new FormData();
      formData.append("firstname", firstname);
      formData.append("lastname", lastname);
      formData.append("email", email);
      formData.append("phone", phone);
      formData.append("nic", nic);
      formData.append("dob", dob);
      formData.append("gender", gender);
      formData.append("password", password);
      formData.append("doctorDepartment", doctorDepartment);
      formData.append("docAvatar", docAvatar);

      const response = await axios.post(
        "http://localhost:4000/api/v1/user/doctor/addnew",
        formData,
        {
          withCredentials: true,
          headers: { "Content-Type": "multipart/form-data" },
        }
      );
	  
	  
To Preview the image while uploading:-

  const [docAvatar, setDocAvatar] = useState("");
  const [docAvatarPreview, setDocAvatarPreview] = useState("");


//handling the avatar logo on fronted
  const handleAvatar=async (e)=>{
    const file = e.target.files[0];
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload=()=>{
      setDocAvatarPreview(reader.result);
      setDocAvatar(file);
    }
  }	  

return (
<> 

<div>
  <img src={docAvatarPreview ? `${docAvatarPreview}` :  "/docHolder.jpg" } alt="Doctor Avatar" />
<input type="file" onChange={handleAvatar} />
</div>

</>
);

----------------------------------------

To print the output of api on fronted:-
1. first call using useefffect.
2. second console data in browser to see api response.
3.put response json object into aitool and write the code for it.

  useEffect(() => {
    // Fetch the data from the API
    axios.get("http://localhost:4000/api/v1/user/doctors")
      .then((response) => {
        console.log("API Response: ", response.data);
        setDoctors(response.data.doctor); // Imp line,Assuming the array is in `response.data.doctor`
      })
      .catch((error) => {
        console.error("Error fetching doctors: ", error);
      });
  }, []); // Empty dependency array to run only once on component mount

--------------------------------------
Protected routers => to check authencation before rendering.

 const ProtectedRoute = ({ isAuthenticated, children }) => {
    if (!isAuthenticated) {
      return <Navigate to="/login" />;
    }
    return children;
  };
  
  <Route
            path="/doctor/addnew"
            element={
              <ProtectedRoute isAuthenticated={isAuthenticated}>
                <AddNewDoctor />
              </ProtectedRoute>
            }
          />